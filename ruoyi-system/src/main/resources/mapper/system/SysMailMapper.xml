<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysMailMapper">
    
    <resultMap type="SysMail" id="SysMailResult">
        <result property="id"    column="id"    />
        <result property="senderId"    column="sender_id"    />
        <result property="senderName"    column="sender_name"    />
        <result property="subject"    column="subject"    />
        <result property="content"    column="content"    />
        <result property="sendTime"    column="send_time"    />
        <result property="readStatus"    column="read_status"    />
    </resultMap>

    <resultMap id="SysMailSysMailReceiverResult" type="SysMail" extends="SysMailResult">
        <collection property="sysMailReceiverList" ofType="SysMailReceiver" column="id" select="selectSysMailReceiverList" />
    </resultMap>

    <resultMap type="SysMailReceiver" id="SysMailReceiverResult">
        <result property="id"    column="id"    />
        <result property="mailId"    column="mail_id"    />
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="type"    column="type"    />
        <result property="readStatus"    column="read_status"    />
    </resultMap>

    <sql id="selectSysMailVo">
        select id, sender_id, sender_name, subject, content, send_time, read_status from sys_mail
    </sql>

    <select id="selectSysMailList" parameterType="SysMail" resultMap="SysMailResult">
        <include refid="selectSysMailVo"/>
        <where>  
            <if test="senderId != null "> and sender_id = #{senderId}</if>
            <if test="senderName != null  and senderName != ''"> and sender_name like concat('%', #{senderName}, '%')</if>
            <if test="subject != null  and subject != ''"> and subject = #{subject}</if>
            <if test="sendTime != null "> and send_time = #{sendTime}</if>
            <if test="readStatus != null  and readStatus != ''"> and read_status = #{readStatus}</if>
        </where>
    </select>

    <select id="selectSentMailsByUserId" parameterType="Long" resultMap="SysMailResult">
        <include refid="selectSysMailVo"/>
        <where>
            <if test="userId != null "> and sender_id = #{userId}</if>
        </where>
        ORDER BY send_time DESC
    </select>

    <select id="selectReceivedMailsByUserId" parameterType="Long" resultMap="SysMailResult">
        SELECT
        m.id,
        m.subject,
        m.send_time,
        m.sender_name,
        r.read_status
        FROM sys_mail m
        JOIN sys_mail_receiver r ON m.id = r.mail_id
        WHERE r.user_id = #{userId}
        ORDER BY m.send_time DESC
    </select>
    
    <select id="selectSysMailById" parameterType="Long" resultMap="SysMailSysMailReceiverResult">
        select id, sender_id, sender_name, subject, content, send_time, read_status
        from sys_mail
        where id = #{id}
    </select>

    <select id="selectSysMailReceiverList" resultMap="SysMailReceiverResult">
        select id, mail_id, user_id, user_name, type, read_status
        from sys_mail_receiver
        where mail_id = #{mail_id}
    </select>

    <insert id="insertSysMail" parameterType="SysMail" useGeneratedKeys="true" keyProperty="id">
        insert into sys_mail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="senderId != null">sender_id,</if>
            <if test="senderName != null and senderName != ''">sender_name,</if>
            <if test="subject != null and subject != ''">subject,</if>
            <if test="content != null and content != ''">content,</if>
            <if test="sendTime != null">send_time,</if>
            <if test="readStatus != null">read_status,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="senderId != null">#{senderId},</if>
            <if test="senderName != null and senderName != ''">#{senderName},</if>
            <if test="subject != null and subject != ''">#{subject},</if>
            <if test="content != null and content != ''">#{content},</if>
            <if test="sendTime != null">#{sendTime},</if>
            <if test="readStatus != null">#{readStatus},</if>
         </trim>
    </insert>

    <update id="updateSysMail" parameterType="SysMail">
        update sys_mail
        <trim prefix="SET" suffixOverrides=",">
            <if test="senderId != null">sender_id = #{senderId},</if>
            <if test="senderName != null and senderName != ''">sender_name = #{senderName},</if>
            <if test="subject != null and subject != ''">subject = #{subject},</if>
            <if test="content != null and content != ''">content = #{content},</if>
            <if test="sendTime != null">send_time = #{sendTime},</if>
            <if test="readStatus != null">read_status = #{readStatus},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSysMailById" parameterType="Long">
        delete from sys_mail where id = #{id}
    </delete>

    <delete id="deleteSysMailReceiverByMailId" parameterType="Long">
        delete from sys_mail_receiver where mail_id = #{mailId}
    </delete>

    <insert id="batchSysMailReceiver">
        insert into sys_mail_receiver( id, mail_id, user_id, user_name, type, read_status) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.mailId}, #{item.userId}, #{item.userName}, #{item.type}, #{item.readStatus})
        </foreach>
    </insert>
</mapper>